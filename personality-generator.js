/*
 * このファイルを修正した場合は、必ずパッチバージョンを上げてください。(例: 1.23.456 -> 1.23.457)
 */
export const version = "1.1.1";

const personalityDefinitions = {
    "cores": { 
        "嫌悪": "厭世家", "独占": "束縛者", "依存": "甘えん坊", "執着": "追跡者", "恋心": "夢見る乙女", "対抗": "挑戦者", "友情": "博愛主義者", "保護": "守護者", "憧憬": "崇拝者", "信頼": "信奉者" 
    },
    "modifiers": { 
        "嫌悪": "排他的で", "独占": "独占欲の強い", "依存": "かまってほしがりな", "執着": "執念深い", "恋心": "ロマンチストな", "対抗": "負けず嫌いの", "友情": "友好的な", "保護": "過保護な", "憧憬": "理想主義の", "信頼": "献身的な" 
    },
    "special_cores": { 
        "嫌悪": "人間不信の批評家", "独占": "歪んだ愛の信奉者", "依存": "共依存体質の寂しがり", "執着": "ストーカー気質の粘着マン", "恋心": "恋に恋するお嬢様", "対抗": "一番じゃないと気が済まない生粋のライバル", "友情": "友達のためなら全てを捧げる親友", "保護": "聖母コンプレックスの世話焼き", "憧憬": "理想の幻影を追い求める夢想家", "信頼": "盲目的に相手を信じ込む純粋な魂" 
    },
    "triples": { 
        "嫌悪": "絶対的排他主義者", "独占": "完全なる支配者", "依存": "自立を忘れた雛鳥", "執着": "執念の化身", "恋心": "純粋無垢な恋の殉教者", "対抗": "勝利以外は無価値と見なす求道者", "友情": "無限の愛を振りまく聖人", "保護": "自己犠牲を厭わない絶対守護者", "憧憬": "神格化された偶像の熱狂的信者", "信頼": "疑うことを知らない無垢な魂" 
    },
    "special_combos": { 
        "嫌悪,独占,恋心": "愛憎渦巻くヤンデレ", "嫌悪,対抗,執着": "敵意に満ちた執念深いウォッチャー", "依存,保護,恋心": "献身を求める甘え上手", "依存,友情,保護": "仲間外れを恐れる世話焼き", "執着,恋心,憧憬": "憧れの人をどこまでも追いかける一途なストーカー", "対抗,憧憬,信頼": "好敵手を認め、高め合う求道者", "友情,保護,信頼": "仲間を信じ守る献身的なリーダー", "独占,保護,執着": "守るためなら閉じ込めたい過保護な監視者", "恋心,友情,信頼": "信じた相手にどこまでも尽くす乙女", "嫌悪,信頼,依存": "信じたいのに信じきれない不安定な懐疑主義者", "対抗,友情,独占": "親友にだけは負けたくない独占欲の強いライバル", "憧憬,保護,依存": "理想の人に守られたい甘えん坊", "嫌悪,友情,恋心": "好きだけど素直になれないツンデレ", "独占,信頼,恋心": "愛する人を自分だけのものにしたいと願う一途な信者", "執着,対抗,憧憬": "憧れのライバルに執着する努力家" 
    }
};

/**
 * 姉妹の未練リストから性格を生成する
 * @param {object[]} sisterRegrets - 姉妹への未練オブジェクトの配列
 * @returns {string} - 生成された性格を表すワード
 */
export function generateSisterPersonality(sisterRegrets) {
    const definitions = personalityDefinitions;
    
    // 未練オブジェクトから未練名だけの配列を抽出
    const regretNames = sisterRegrets.map(r => r.regretName).filter(Boolean);

    if (!regretNames || regretNames.length === 0) {
        return "？？？";
    }

    // 抽出した未練名の配列
    let regretsToAnalyze = [];

    // 人数に応じて使用する未練を決める
    if (regretNames.length === 1) { // 2人姉妹の場合
        regretsToAnalyze = [regretNames[0], regretNames[0], regretNames[0]];
    } else if (regretNames.length === 2) { // 3人姉妹の場合
        regretsToAnalyze = [regretNames[0], regretNames[0], regretNames[1]];
    } else { // 4人以上の姉妹
        // 上位3つの未練を使用する（ここでは単純に最初の3つ）
        regretsToAnalyze = regretNames.slice(0, 3);
    }
    
    const counts = {};
    regretsToAnalyze.forEach(regret => {
        counts[regret] = (counts[regret] || 0) + 1;
    });

    const uniqueRegrets = Object.keys(counts).sort();

    if (uniqueRegrets.length === 1) {
        const regret = uniqueRegrets[0];
        return definitions.triples[regret] || `純粋な${definitions.cores[regret]}`;
    }

    if (uniqueRegrets.length === 2) {
        const mainRegret = Object.keys(counts).find(key => counts[key] === 2);
        const subRegret = Object.keys(counts).find(key => counts[key] === 1);
        const core = definitions.special_cores[mainRegret];
        const modifier = definitions.modifiers[subRegret];
        return `${modifier}、${core}`;
    }

    if (uniqueRegrets.length === 3) {
        const sortedKey = uniqueRegrets.join(',');
        if (definitions.special_combos[sortedKey]) {
            return definitions.special_combos[sortedKey];
        }
        const modifier = definitions.modifiers[uniqueRegrets[0]];
        const core = definitions.cores[uniqueRegrets[1]];
        const subModifier = definitions.modifiers[uniqueRegrets[2]];
        return `${modifier}${core}だが、時折${subModifier}一面を見せる`;
    }

    return "定義不能な性格";
}

const relationshipDefinitions = {
    "嫌悪,嫌悪": "互いの破滅を望む不倶戴天の敵",
    "独占,独占": "互いを所有物と見なし、傷つけ合う共犯者",
    "依存,依存": "互いがいないと精神が崩壊する共依存",
    "執着,執着": "四六時中互いを監視し合う、逃れられない運命共同体",
    "恋心,恋心": "互いを想うあまりに自らを傷つける、悲劇的な恋人たち",
    "対抗,対抗": "互いを打ち負かすことだけが存在意義の、永遠の好敵手",
    "友情,友情": "相手の痛みすら分かち合おうとする、自己犠牲的な親友",
    "保護,保護": "互いを無力と見なし、過剰なまでに庇い合う窒息した関係",
    "憧憬,憧憬": "互いに歪んだ理想像を押し付け合う、幻影の崇拝者",
    "信頼,信頼": "互いを信じるあまり、世界中の全てを疑う排他的なパートナー",
    "嫌悪,依存": "憎みながらも、見捨てられることを恐れる腐れ縁",
    "嫌悪,執着": "憎悪の対象から片時も目を離さない、粘着質な監視者",
    "嫌悪,恋心": "「好き」と「殺したい」が同居する、破滅的な愛憎関係",
    "嫌悪,独占": "憎い相手を誰にも渡したくない、屈折した所有者",
    "嫌悪,対抗": "軽蔑と敵意が渦巻く、不毛な競争相手",
    "嫌悪,友情": "友情を求めながらも、素直になれず攻撃してしまう天邪鬼",
    "嫌悪,保護": "守りたいはずが、その弱さを憎んでしまう歪んだ庇護",
    "嫌悪,憧憬": "かつての憧れが、嫉妬と憎悪に転化した元崇拝者",
    "嫌悪,信頼": "信じようとする度に裏切られたと感じる、人間不信の対象",
    "依存,執着": "見捨てられる不安から、相手の一挙一動に執着する関係",
    "依存,恋心": "恋愛感情を、己の生存意義と勘違いしている依存者",
    "依存,独占": "支配されることで安心感を得る、歪んだ隷属関係",
    "依存,対抗": "好敵手の存在そのものに依存してしまっている競争者",
    "依存,友情": "友情を履き違え、際限なく相手に寄りかかる甘えん坊",
    "依存,保護": "庇護されることを当然と受け入れる、無垢なる被保護者",
    "依存,憧憬": "憧れの対象の言葉を、己の意思なく実行する追随者",
    "依存,信頼": "絶対的な信頼を寄せ、思考すら放棄した信奉者",
    "執着,恋心": "恋愛感情が行き過ぎ、ストーキングに発展した一方的な思慕",
    "執着,独占": "相手の全てを把握し、管理しようとする支配的な粘着",
    "執着,対抗": "好敵手の全てを知り尽くそうとする、狂気的な研究者",
    "執着,友情": "親友という立場を利用し、どこまでもついてくる影",
    "執着,保護": "「守るため」という大義名分で、相手を常に監視する看守",
    "執着,憧憬": "神格化した相手の幻影を、現実でも追い続ける狂信者",
    "執着,信頼": "信頼を逆手に取り、相手のプライベートに踏み入る侵害者",
    "恋心,独占": "愛するが故に、相手を世界から隔離したいと願う籠の管理者",
    "恋心,対抗": "同じ相手を想う恋敵、あるいは好敵手への歪んだ恋慕",
    "恋心,友情": "親友という関係を壊したくない、臆病な片思い",
    "恋心,保護": "庇護欲を恋愛感情と錯覚している守護者と、それに甘える姫",
    "恋心,憧憬": "手の届かない偶像に、報われないと知りながら恋い焦がれるファン",
    "恋心,信頼": "信頼から芽生えた、盲目的で純粋な恋愛感情",
    "独占,対抗": "好敵手を自分だけのものにしたい、歪んだ独占欲を持つライバル",
    "独占,友情": "親友を誰にも渡さない、友情を名目にした束縛",
    "独占,保護": "保護の名目で相手を囲い込み、外部から隔離する支配者",
    "独占,憧憬": "憧れの対象を穢させまいと、独り占めしようとする狂信的な崇拝者",
    "独占,信頼": "信頼関係を悪用し、相手の交友関係を支配する操縦者",
    "対抗,友情": "互いを高め合う、健全に見えて熾烈な競争を繰り広げる親友",
    "対抗,保護": "見下している相手を守らざるを得ない、屈辱的な庇護関係",
    "対抗,憧憬": "憧れの背中をいつか超えることを誓う、好敵手兼崇拝者",
    "対抗,信頼": "信頼する相手だからこそ、絶対に負けたくない真剣な勝負相手",
    "友情,保護": "友のために、危険を顧みずに行動する献身的な守護者",
    "友情,憧憬": "尊敬する友のようになりたいと願う、純粋な追随者",
    "友情,信頼": "固い友情と信頼で結ばれた、戦場における唯一の心の支え",
    "保護,憧憬": "神聖な憧れの対象を、どんな脅威からも守ろうとする狂信的な騎士",
    "保護,信頼": "絶対的な信頼に基づき、命を懸けて相手を守る守護者",
    "憧憬,信頼": "尊敬と信頼が入り混じった、師弟あるいはそれ以上の関係"
};

/**
 * 2人の姉妹の未練の組み合わせから関係性を生成する関数
 * @param {string[]} regrets - 2つの未練の名前が入った配列 (例: ["恋心", "独占"])
 * @returns {string} - 生成された関係性を表すワード
 */
export function generateRelationship(regrets) {
    if (!regrets || regrets.length !== 2) {
        return "不明な関係";
    }

    // 2つの未練をアルファベット順にソートしてキーを生成し、一貫性を保つ
    // 例: ["独占", "恋心"] でも ["恋心", "独占"] でも "恋心,独占" というキーになる
    const key = [...regrets].sort().join(',');
    const specificRelationship = relationshipDefinitions[key];

    // 定義済みの関係性を返す。もし万が一キーが存在しない場合は「定義不能な関係」を返す
    return specificRelationship || "定義不能な関係";
}