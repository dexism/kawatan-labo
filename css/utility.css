/* ================================
   ユーティリティクラス
================================ */
    .d-flex { display: flex; }
    .flex-column { flex-direction: column; }
    .align-items-center { align-items: center; }
    .justify-content-center { justify-content: center; }
    .text-center { text-align: center; }

/* ================================
   Utility: Accordion
  +-------------------------------
  | .acordion-container
  | +-----------------------------
  | | .acordion-header
  | | +---------------------------
  | | | <span>CATEGORY NAME
  | | | ::after OPEN/CLOSE MARKER
  | | +---------------------------
  | | | .acordion-content
  | | +---------------------------
  | +-----------------------------
  +-------------------------------
================================ */
/* クリックするヘッダー部分 */
.accordion-header {
    cursor: pointer;
    user-select: none;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
}
/* 開閉アイコン (マーカー) */
.accordion-header::after {
    content: '▲';
    transition: all 1.0s ease;
    flex-shrink: 0;
    padding-bottom: 0.2em;
    margin: 0 0 0 10px;
    font-size: 0.8em;
}
/* 開閉されるコンテンツ部分 */
.accordion-content {
    max-height: 500px; /* 十分な高さを確保 */
    overflow: hidden;
    transition: all 0.3s ease;
}
/* 閉じた状態のスタイル */
.accordion-container.is-closed > .accordion-content {
    max-height: 0;
    padding-top: 0;
    padding-bottom: 0;
    /* transitionをスムーズにするため、borderなどもここで制御すると良い */
    border-top-width: 0;
    border-bottom-width: 0;
    overflow: hidden;
}
.accordion-container.is-closed > .accordion-header::after {
    transform: rotate(-180deg);
}
/* ================================
   共通スタイル
================================ */
.btn {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 8px 12px;
    font-weight: bold;
    background-color: var(--color-background-2);
    color:            var(--color-text);
    border: 1px solid var(--color-border);
    border-radius:    var(--border-radius-small);
    cursor: pointer;
    transition: all 0.2s;
}
.btn:hover:not(:disabled) {
    opacity: 0.8;
}
.btn:disabled {
    cursor: not-allowed;
    opacity: 0.6;
}
/* ================================
   トグルスイッチ
================================ */
:root {
    --switch-height: 16px;
    --switch-width: calc(2 * var(--switch-height));
    --color-switch: #fc0;
}
/* コンテナを横並びに */
.setting-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 5px 9px;
    font-size: 16px;
}
/* ラベル部分 */
.label {
    flex: 1;
    font-size: 14px;
    font-weight: bold;
    color: var(--color-fore-6);
}
/* スイッチ全体のスタイル */
.switch {
    position: relative;
    display: inline-block;
    width:      var(--switch-width);
    height:     var(--switch-height);
    padding: 4px;
}
/* チェックボックスを非表示に */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}
/* スライダーのスタイル */
.slider {
    position: absolute;
    cursor: pointer;
    top:    0; 
    left:   0;
    right:  0; 
    bottom: 0;
    background-color: var(--color-background-5);
    transition: 0.2s;
    border-radius: 30px;
    border: 2px solid var(--color-background-7);
}
/* スライダーの丸い部分 */
.slider::before {
    position: absolute;
    content: "";
    height: var(--switch-height); 
    width:  var(--switch-height);
    left:   2px; 
    bottom: 2px;
    background-color: var(--color-background-2);
    transition: 0.2s;
    border-radius: 50%;
}
/* ホバー */
.slider:hover {
    box-shadow: 0 0 5px inset var(--color-switch-2);
}
/* チェックされたときのスタイル */
input:checked + .slider {
    background-color: var(--color-switch);
    border-color: yellow;
    /* box-shadow: 0 0 10px var(--color-switch); */
}
input:checked + .slider::before {
    background-color: var(--color-background-1);
    transform: translateX(var(--switch-height));
}