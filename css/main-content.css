/* ================================
   3. メインコンテンツ (キャラクターカード & バトルグリッド)
================================ */

/* --- キャラクター表示エリア --- */
.grid-area-enemy-panel h2.section-title, 
.grid-area-pc-panel h2.section-title {
    justify-content: center;
}

.char-area-wrapper {
    display: flex;
    align-items: center;
    width:  100%;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.char-container {
    display: flex;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: center;
    overflow: auto hidden;
    -webkit-overflow-scrolling: touch; /* iOSでスムーズなスクロールを有効にする */
    /*  scrollbar-width: none; */
    /* -ms-overflow-style: none; */
    cursor: grab;
    gap: 15px;
    margin: 0;
    padding: 20px;
    box-sizing: border-box;
}
.char-container::-webkit-scrollbar {
    display: none;
}

/* --- キャラクターカード --- */
.char {
    position: relative;
    width:  var(--card-size);
    height: calc(1.4 * var(--card-size));
    flex-shrink: 0;
    text-align: center;
    background-color: var(--color-background-1);
    border: none;
    border-radius: 10px;
    margin: 0;
    padding: 5px;
    box-sizing: border-box;
    box-shadow: 0 0 10px var(--color-8);
    transition: all 0.2s ease-out;
    overflow: visible;
}

.char img {
    width: 100%;
    margin-top: 15px;
    aspect-ratio: 1 / 1;
    object-fit: contain;
    border-radius: 7px;
    /* background-color: var(--color-background-1); */
}

/* カード上のオーバーレイ要素 */
.char-img-container {
    position: relative;
}
/* 中央上 エリア名 */
.char-area-name {
    position: absolute;
    top: 0px;
    left: 50%;
    transform: translate(-50%, 0);
    /*background-color: rgba(0, 0, 0, 0.6);*/
    opacity: 0.7;
    color:               white;
    text-shadow: 0 0 3px black;
    font-size: 13px;
    font-weight: bold;
    padding: 0 8px 3px 8px;
    border-radius: 0 0 10px 10px;
    z-index: 6;
    white-space: nowrap;
}
/* エリアごとの背景色を適用するクラス */
.area-color-naraku {   background-color: var(--color-naraku); }
.area-color-jigoku {   background-color: var(--color-jigoku); }
.area-color-rengoku {  background-color: var(--color-rengoku); }
.area-color-hanazono { background-color: var(--color-hanazono); }
.area-color-rakuen {   background-color: var(--color-rakuen); }
/* 中央下 アンデッド名 */
.char-name-overlay {
    position: absolute;
    bottom: 0px;
    left: 50%;
    transform: translate(-50%, 0);
    color:               white;
    background-color:    rgba(0, 0, 0, 0.7);
    text-shadow: 0 0 3px black;
    font-size: 13px;
    font-weight: bold;
    padding: 1px 8px 2px 8px;
    border-radius: 10px 10px 0 0;
    z-index: 6;
    white-space: nowrap;
}
/* ステータス表示 (行動値、パーツ数など) */
/* 左上 行動値 */
.char-action-display {
    position: absolute;
    top:  2px;
    left: 8px;
    z-index: 5;
    pointer-events: none;
    text-align: left;
}
.char-action-value {
    font-size: 26px;
    font-weight: bold;
    line-height: 1.2;
    text-shadow:
        0 0 4px black,
        0 0 4px black, 
        0 0 4px black;
    color:    red;
}
.char-action-subtext {
    font-size: 11px;
    font-weight: bold;
    line-height: 1.2;
    text-shadow:
        0 0 2px var(--color-background-1),
        0 0 2px var(--color-background-1),
        0 0 2px var(--color-background-1),
        0 0 2px var(--color-background-1);
    color:      var(--color-fore-3);
}
/* 右上 パーツ数 */
.char-parts-count {
    position: absolute;
    top:   2px;
    right: 8px;
    font-size: 26px;
    font-weight: bold;
    line-height: 1.2;
    text-shadow:
        0 0 6px black,
        0 0 6px black, 
        0 0 6px black;
    color:      cyan;
    pointer-events: none;
    z-index: 5;
}
/* 右上 スタック数 */
.char-stack-count {
    position: absolute;
    top:   5px;
    right: 5px;
    padding: 0 4px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
    font-weight: bold;
    background-color:     #36c;
    color:                white;
    border: 2px solid     white;
    text-shadow: 0 0 3px  black;
    box-shadow: 
        0 -2px 5px inset black,
        0  2px 5px inset white,
        0  1px 3px black;
    z-index: 6;
}
/* 狂気点とパーツ状態の表示 */
.char-madness {
    position: absolute;
    bottom: 24px;
    left: 5px;
    z-index: 5;
    pointer-events: none;
}
.char-madness div {
    font-size: 9px;
    font-weight: bold;
    line-height: 14px;
    white-space: nowrap;
    text-align: left;
    text-shadow:
      -1px -1px 2px red,
       1px -1px 2px red,
      -1px  1px 2px red,
       1px  1px 2px red;
    color:          #300;
}
.char-madness div.is-madness {
    text-shadow:
      0 0 4px black, 
      0 0 4px black;
    color:    red;
}

.char-parts-status {
    position: absolute;
    bottom: 24px;
    right: 5px;
    z-index: 5;
    pointer-events: none;
}
.char-parts-status div {
    font-size: 9px;
    font-weight: bold;
    line-height: 14px;
    white-space: nowrap;
    text-align: right;
    text-shadow:
        -1px -1px 2px cyan,
         1px -1px 2px cyan,
        -1px  1px 2px cyan,
         1px  1px 2px cyan;
    color:            #033;
}
/* カードの状態変化のスタイル */
.char.is-inactive::before {
    content: '';
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 10px;
    z-index: 7;
}
.highlight-char {
    box-shadow:
        0 0 20px       gold,
        0 0 20px       gold;
    background:        gold;
    outline: 2px solid yellow;
    transform: scale(1.05);
    z-index: 100;
}
.target-selectable {
    cursor: crosshair;
    outline: 2px solid   limegreen;
    box-shadow: 0 0 20px limegreen;
    background:          #dfd;
    transform: scale(1.05);
    z-index: 100;
}
.hover-highlight {
    box-shadow: 0 0 15px cyan;
    background:          #dff;
    outline: 2px solid   cyan;
    transform: scale(1.1);
    z-index: 101;
}
body.is-dragging .char.hover-highlight {
    transform: scale(1);
}
.is-targeted {
    outline: 3px solid   red;
    box-shadow: 0 0 20px red !important;
    transform: scale(1.1);
}

/* 状態異常テープ */
.char-status-overlays {
    position: absolute; 
    top: 0; 
    left: 0;
    width: 100%; 
    height: 100%;
    display: flex; 
    flex-direction: column;
    justify-content: center; 
    align-items: center;
    pointer-events: none; 
    z-index: 8; 
    overflow: hidden;
}
.status-tape {
    display: none; 
    position: absolute;
    width: 200%; 
    padding: 0;
    text-align: center; 
    font-size: 16px;
    font-weight: bold; 
    text-shadow: 0 0 6px black;
    box-shadow: 0 0 6px  black; 
    border: 0;
}
.char-status-overlays.status-mental-collapse .status-tape-mental-collapse,
.char-status-overlays.status-destroyed .status-tape-destroyed,
.char-status-overlays.status-withdrawn .status-tape-withdrawn {
    display: block;
}
.status-tape-mental-collapse {
    background-color: #3b9;
    color:            black;
    transform: rotate(-7deg);
    top: 35%;
}
.status-tape-destroyed {
    background-color: black;
    color:            #c21;
    transform: rotate(35deg);
    top: 40%;
}
.status-tape-withdrawn {
    background-color: goldenrod; 
    color:            black;
    transform: rotate(2deg); 
    top: 55%;
}
/* main-content.css の末尾に追加 */

/* ================================
   ふきだしマーカー
================================ */

/* マーカーを格納するコンテナ */
.char-bubble-marker-container {
    position: absolute;
    bottom: 35px;
    left: 5px;
    width: 100%;
    height: 30px; /* マーカーの高さに合わせる */

    display: flex;
    justify-content: start;
    align-items: center;
    gap: 4px; /* マーカー間の隙間 */
    
    pointer-events: none; /* マウスイベントを透過させる */
    z-index: 10; /* 他のオーバーレイより手前に表示 */
}
/* ふきだしマーカー本体 */
.bubble-marker {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    
    display: flex;
    justify-content: center;
    align-items: center;

    font-size: 12px;
    font-weight: bold;
    color:               white;
    text-shadow: 
        0 1px 4px        black,
        0 1px 4px        black;
    box-shadow: 
        0 -2px 4px inset black,
        0  2px 4px inset white,
        0  2px 4px       black;
    
    /* デフォルトの背景色と枠線 */
    background-color: red;
    border: 1px solid white;
    box-sizing: border-box;
}
/* 「何をしているか」を表示するマーカーのコンテナ */
.char-action-marker-container {
    position: absolute;
    bottom: 72px;
    left: 0;
    width: 100%;
    height: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 4px;
    pointer-events: none;
    z-index: 10;
}
/* ふきだしマーカー本体 */
.char-action-marker-container .bubble-marker {
    width: 40px;
    height: 28px;
    border-radius: 20px;
    font-size: 16px;
}

/* 「アンデッドを追加」カード */
.add-char-card {
    width: var(--card-size);
    height: calc(1.4 * var(--card-size));
    flex-shrink: 0;
    border: 4px dashed var(--color-text-muted);
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    align-content: center;
    cursor: pointer;
    color: var(--color-text-muted);
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    transition: all 0.2s ease;
    font-weight: bold;
}
.add-char-card:hover {
    background:   var(--color-surface-1);
    border-color: var(--color-text);
    color:        var(--color-text);
}
.add-char-text-2 {
    display: flex;
    font-size: 26px;
    height: 30px;
}
.add-char-plus {
    font-size: 50px;
    line-height: 1;
}
.add-char-text {
    display: flex;
    font-size: 16px;
    height: 30px;
}
/* カードホバー時のアクションボタン */
.card-actions-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-shadow);
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 8px;
    opacity: 0;
    transition: opacity 0.2s;
    pointer-events: none;
    z-index: 200;
}
/* :hover を .actions-visible クラスに変更 */
.char.actions-visible .card-actions-overlay {
    opacity: 1;
    pointer-events: auto;
}
/* 選択されているカードを視覚的に示すためのスタイルを追加 */
.char.actions-visible {
    box-shadow:
        0 0 20px         gold,
        0 0 20px         gold;
    outline: 2px solid yellow;
    transform: scale(1.05);
}
.card-action-row {
    display: flex;
    gap: 6px;
}
.card-action-btn {
    border-radius: 20px;
    min-width:  40px;
    min-height: 40px;
    padding: 5px;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    box-shadow:
        0 0 10px      gold,
        0 0 10px      gold;
    background-color: gold;
    color:            black;
    border: 3px solid yellow;
}
.card-action-btn:hover {
    background-color: #ffa;
    transition: all 0.2s;
}
.card-action-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    box-shadow: none;
    background-color: #fff;
    color:            #000;
    border: 2px solid #fff;
}
/* ダメージマーカー */
.damage-prompt-container {
    position: absolute;
    bottom: 105px; 
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: end;
    pointer-events: none;
    z-index: 9;
}
.damage-prompt-button {
    background-color:    rgba(255, 0, 0, 0.7);
    color:               white;
    border: 2px solid    white;
    box-shadow: 
        0 0 10px inset   black,
        0 0 10px         black;
    text-shadow: 
        0 0 5px black,
        0 0 5px black;
    border-radius: 10px;
    padding: 0 10px;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
    pointer-events: auto;
    transition: transform 0.2s;
}
.damage-prompt-button:hover {
    transform: scale(1.1);
    background-color: red;
}
/** ======================
    舞台見取図 バトルグリッド
    =================== */
.battle-grid-scroll-wrapper {
    width: 100%; /* 親要素(画面幅)いっぱいに広がる */
    padding: 5px 0;
    margin: 0;
    box-sizing: border-box;
    overflow: auto hidden; /* 中身がはみ出たら、横方向のみスクロールバーを表示 */
    -webkit-overflow-scrolling: touch; /* iOSでスムーズなスクロールを有効にする */
    position: relative;
    overscroll-behavior-x: contain;
}
/* このクラスが付与されている間、横スクロールを無効化する
.battle-grid-scroll-wrapper.scroll-disabled {
    overflow-x: hidden;
}
*/
.battle-wrap {
    display: grid;
    grid-template-columns: var(--header-width) repeat(var(--col-count), minmax(var(--cell-width), auto));
    grid-template-rows: var(--cell-height) repeat(var(--row-count), minmax(var(--cell-height), auto));
    text-align: center;
    text-shadow:
      0 0 5px black,
      0 0 5px black;
    font-size: 16px;
    font-weight: bold;
    position: relative;
    transition: all 0.2s ease-out;
    background-color: var(--color-background-2);
    gap: 3px;
}
/* グリッドのヘッダーとセル */
.current-action-cell {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #222;
    color: #edd;
    grid-column: 1;
    grid-row: 1;
    position: sticky;
    left: 0;
    border-radius: 3px;
    z-index: 3;
}
/* エリア名 */
.row-header {
    display: flex;
    align-items: center;
    justify-content: center;
    /* background: #322; */
    color: #c55;
    position: sticky;
    left: 0;
    border-radius: 3px;
    opacity: 0.9;
    z-index: 19;
}
/* カウント */
.col-header {
    display: flex;
    align-items: center;
    justify-content: center;
    background: #333;
    color:      #e33;
    position: sticky;
    border-radius: 3px;
    z-index: 2;
}
/*
.cell {
    display: flex;
    flex-direction: column;
    align-items: center;
    align-content: flex-start;
    justify-items: flex-start;
    justify-content: flex-start;
    background-color: var(--color-card);
    overflow: visible;
    min-width: var(--cell-width);
    min-height: var(--cell-height);
    border-radius: 3px;
}
*/
.cell {
    display: flex;
    flex-direction: row;

    flex-wrap: wrap;
    flex-wrap: wrap; /* 縦積み: wrap 横並べ：nowrap*/
    
    flex-basis: fit-content;

    align-items: center;
    align-content: flex-start;
    justify-items: flex-start;
    justify-content: flex-start;
    
    overflow: visible;
    min-width: var(--cell-width);
    min-height: var(--cell-height);
    border-radius: 3px;
    box-sizing: border-box;

    flex-shrink: 0;

    /* text-align: center; を削除（マーカーを左詰めにするため）*/
}
/* --- グリッドセルのエリアカラー --- */
/* 透明度を加えて、ヘッダーより少し薄い色にする */
.cell.cell-area-naraku { background-color: color-mix(in srgb, var(--color-naraku) 50%, transparent); }
.cell.cell-area-jigoku { background-color: color-mix(in srgb, var(--color-jigoku) 50%, transparent); }
.cell.cell-area-rengoku { background-color: color-mix(in srgb, var(--color-rengoku) 50%, transparent); }
.cell.cell-area-hanazono { background-color: color-mix(in srgb, var(--color-hanazono) 50%, transparent); }
.cell.cell-area-rakuen { background-color: color-mix(in srgb, var(--color-rakuen) 50%, transparent); }
/* カウントゼロ */
.cell.col-zero {
    background-color: #522;
}
/* カウント -1 以下 */
.cell.col-negative {
    background-color: #444;
}
/* アクティブカウント */
.highlight-col {
    background-color:  #812;
    box-shadow:
        0 0 10px inset gold,
        0 0 10px       gold;
    outline: 2px solid yellow;
}

/* グリッド上のマーカー */
.marker {
    position: relative;
    display: inline-block;
    align-items: center;
    justify-content: center;
    pointer-events: auto;
    margin: 0;
    border-radius: 5px;
    transition: all 0.2s ease;

    width: var(--cell-width);     /* 幅を40pxに固定 */
    height: var(--cell-height);   /* 高さを40pxに固定 */
    display: flex;
    flex-shrink: 0;               /* ★★★ マーカーが縮むのを防ぐ最重要設定 ★★★ */
}
/*
.marker-img {
    max-width:  var(--cell-width);
    max-height: var(--cell-height);
    aspect-ratio: 1 / 1;
    object-fit: contain;

    width:  auto;
    height: auto;
    display: block;
    z-index: 1;
}
*/
.marker-img {
    width: 100%; /* 親である.markerの幅(40px)に追従 */
    height: 100%; /* 親である.markerの高さ(40px)に追従 */
    object-fit: contain;
    display: flex;
    z-index: 1;
    /* 以前のwidth, height, aspect-ratio指定は不要になるので削除・上書き */
}
/* 名前のポップアップ */
.marker::after {
    content: attr(data-name);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    border-radius: 5px;
    background: rgba(0, 0, 0, 0.7);
    color:      #eee;
    padding: 0 5px;
    font-size: 0.8rem;
    white-space: pre;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s;
    margin-bottom: 4px;
    z-index: 10;
}
.marker:hover::after {
    opacity: 1;
}
.marker-stack-count {
    position: absolute;
    bottom: -5px;
    right: -5px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 15px;
    font-weight: bold;
    text-shadow:
        0 0 2px white,
        0 0 2px white,
        0 0 2px white,
        0 0 2px white;
    color:    #25a;
    z-index: 7;
    pointer-events: none;
}
