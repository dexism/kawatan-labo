/* ================================
   4. ステータスパネル (右側サイドバー)
================================ */
/* --- セクション共通 --- */
.section {
    background-color: var(--color-background);
    color:            var(--color-text-2);
    padding: 0 5px 5px 5px;
}
.section-title {
    font-size: 0.8rem;
    font-weight: bold;
    display: flex;
    align-items: baseline;
}
h2.section-title {
    padding-left: 5px;
}
/* --- バトルステータス --- */
.status-grid {
    display: grid;
    grid-template-columns: 1fr 50px 50px;
    gap: 8px;
    padding-top: 5px;
    text-align: center;
}
.status-item {
    background: var(--color-surface-dark);
    padding: 3px;
    border-radius: 5px;
}
.status-label {
    font-size: 10px;
    color: var(--color-text-1);
    font-weight: normal;
}
.status-value {
  font-size: 18px;
  font-weight: bold;
  text-shadow:
    0 0 3px black,
    0 0 3px black,
    0 0 3px black,
    0 0 3px black;
  color:    #b00;
}
/* --- タイミングインジケータ --- */
.phase-control-wrapper {
    padding-bottom: 10px;
    display: flex;
    flex-direction: column;
}
.indicator-container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 5px;
    padding: 10px;
}
.control-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 5px;
    padding: 5px;
}
.phase-indicator {
    font-size: 10px;
    font-weight: bold;
    border-radius: 5px;
    border: 0;
    background: var(--color-background);
    color:      var(--color-text-muted);
    text-align: center;
    pointer-events: none;
    user-select: none;
    line-height: 1.2;
    padding: 5px;
}
.phase-indicator.active {
    box-shadow: 0 0 10px gold;
    background:          gold;
    color:               black;
    outline: 2px solid   yellow;
    z-index: 100;
}
/* カウントダウン／ターン終了 */
.phase-btn {
    padding: 8px 4px;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    box-shadow:
        0 0 10px      gold,
        0 0 10px      gold;
    background-color: gold;
    color:            black;
    border: 2px solid yellow;
    transition: all 0.2s;
}
.phase-btn:hover:not(:disabled) {
    background-color: #ffa;
}
.phase-btn:disabled {
    background:       var(--color-surface-dark);
    color:            var(--color-text-muted);
    border: 0;
    cursor: default;
    opacity: 0.6;
    pointer-events: none;
    box-shadow: none;
}
/* 宣言アイテムリストの「共通」スタイル */
.action-queue-list {
    background-color: var(--color-log-bg);
    border: 1px solid var(--color-border);
    border-radius: 10px;
    padding: 5px;
    font-size: 12px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    overflow-y: auto;
    /* 最小の高さを設定。項目が0個でもこの高さは維持される。 */
    min-height: 30px; 
    /* 最大の高さを200pxに設定。これを超えるとスクロールバーが表示される。 */
    max-height: 300px;
    /* height: auto; を暗黙的に指定し、中身に合わせて高さが変わるようにする */
    height: auto;
}
/* ★★★ ラピッド宣言専用の「積み上げ」スタイルを新設 ★★★ */
.action-queue-list.is-stack-style {
    flex-direction: column-reverse;
}
/* 宣言アイテム（箱）のスタイル */
label.action-queue-item {
    box-shadow:
      0 0 10px        black,
      0 0 10px        black;
    background-color: var(--color-log-bg);
    border: 1px solid #888;
    border-radius: 4px;
    padding: 6px 8px;
    display: flex;
    align-items: center;
    font-weight: bold;
    transition: all 0.2s ease-in-out;
}
/* ② 処理可能な箱（チェックボックスが有効）のスタイル */
label.action-queue-item:not(.is-disabled) {
    cursor: pointer;
    box-shadow:
        0 0 10px      gold,
        0 0 10px      gold;
    border-color:     yellow;
    color:            black;
    background-color: gold;
    z-index: 100;
}
label.action-queue-item:hover:not(.is-disabled) {
    background-color: #ffa;
}
/* ③ 処理完了した箱（チェック済み）のスタイル */
label.action-queue-item.is-checked {
    background:   #c8e6c9;
    border-color: #81c784;
}
label.action-queue-item.is-checked span {
    color: #c33;
    text-decoration: line-through;
}

/* チェックボックス自体のスタイル */
.action-queue-item input[type="checkbox"] {
    margin-right: 8px;
}
.log-area .log {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    height: 0;
    font-size: 14px;
}
.grid-area-log-panel,
.log-area .log {
    display: flex;
    flex-direction: column;
    /* 親要素いっぱいに広がるように設定 */
    flex-grow: 1;
    min-height: 200px;
    height: 100%; /* for IE/Edge */
    height: auto;
}
.log-entries-container {
    flex-grow: 1;
    /* height: 300px; などの固定高さを削除、またはautoに */
    height: auto; 
    background-color: var(--color-log-bg);
    border: 1px solid var(--color-border);
    overflow-y: auto;
    padding: 0 8px;
    border-radius: 10px;
}
.log-entry {
    padding-bottom: 6px;
    margin-bottom: 6px;
    border-bottom: 1px solid var(--color-border);
    font-size: 14px;
    font-weight: bold;
}
.log-entry:last-child {
  border-bottom: none;
  margin-bottom: 0;
}
@media screen and (max-width: 768px) {
    .status-grid {
        grid-template-columns: 1fr 50px; /* スマホ表示は2列 */
    }
}
/* ================================
   5. 戦闘コントロールボタン
================================ */

/* 戦闘開始ボタンのスタイル */

/* 戦闘中コントロールのコンテナ */
.in-battle-controls {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 5px;
}

/* ★★★ 表示/非表示の切り替えロジック ★★★ */

/* セットアップ中 (デフォルト) */
.setup-phase #inBattleControls {
    display: none; /* カウントダウン/ターン終了を非表示 */
}
.setup-phase #startBattleBtn {
    display: block; /* 戦闘開始を表示 */
}

/* 戦闘開始後 */
.battle-phase #startBattleBtn {
    display: none; /* 戦闘開始を非表示 */
}
.battle-phase #inBattleControls {
    display: grid; /* カウントダウン/ターン終了を表示 */
}
