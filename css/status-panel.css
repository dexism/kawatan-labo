/* ================================
   4. ステータスパネル (右側サイドバー)
================================ */
/* --- セクション共通 --- */
.section {
    background-color: var(--color-background-2);
    color:            var(--color-text-2);
    padding: 0 5px 5px 5px;
}
.section-title {
    font-size: 0.8rem;
    font-weight: bold;
    display: flex;
    align-items: baseline;
}
h2.section-title {
    padding: 0 5px;
    margin: 3px;
    width: auto;
}
/* --- バトルステータス --- */
.status-grid {
    display: grid;
    grid-template-columns: 1fr 50px 50px;
    gap: 8px;
    padding-top: 5px;
    text-align: center;
}
@media screen and (max-width: 768px) {
    .status-grid {
        grid-template-columns: 1fr 50px; /* スマホ表示は2列 */
    }
}
.status-item {
    background: var(--color-surface-dark);
    padding: 3px;
    border-radius: 5px;
}
.status-label {
    font-size: 10px;
    color: var(--color-text-1);
    font-weight: normal;
}
.status-value {
  font-size: 18px;
  font-weight: bold;
  text-shadow:
    0 0 3px black,
    0 0 3px black,
    0 0 3px black,
    0 0 3px black;
  color:    #b00;
}
/* --- タイミングインジケータ --- */
.phase-control-wrapper {
    padding-bottom: 10px;
    display: flex;
    flex-direction: column;
}
.indicator-container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 5px;
    padding: 5px;
}
.control-container {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 5px;
    padding: 5px;
}
.phase-indicator {
    font-size: 10px;
    font-weight: bold;
    border-radius: 10px;
    border: 0;
    background: var(--color-background-2);
    color:      var(--color-text-muted);
    text-align: center;
    pointer-events: none;
    user-select: none;
    line-height: 1.2;
    padding: 5px;
}
.phase-indicator.active {
    box-shadow:  
        0 0  5px         #0ff,
        0 0 20px         #0ff;
    text-shadow: 0 0 5px #0ff;
    background:          #cff;
    color:               #000;
    border: 2px solid    #0ff;
    z-index: 100;
}
/* カウントダウン／ターン終了 */
.phase-btn {
    padding: 8px 0;
    font-size: 15px;
    border-radius: 5px;
    width: 100%;
    cursor: pointer;
    font-weight: bold;
    box-shadow:
        0 0 10px      gold,
        0 0 10px      gold;
    background-color: gold;
    color:            black;
    border: 2px solid yellow;
    transition: all 0.2s;
}
.phase-btn:hover:not(:disabled) {
    background-color: #ffa;
}
.phase-btn:disabled {
    background:       var(--color-surface-dark);
    color:            var(--color-text-muted);
    border-color: transparent;
    cursor: default;
    opacity: 0.6;
    pointer-events: none;
    box-shadow: none;
}
/* 宣言アイテムリストの「共通」スタイル */
.action-queue-list {
    background-color: var(--color-log-bg);
    border: 1px solid var(--color-border);
    border-radius: 10px;
    padding: 5px;
    font-size: 12px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    overflow-y: auto;
    /* 最小の高さを設定。項目が0個でもこの高さは維持される。 */
    min-height: 30px; 
    /* 最大の高さを400pxに設定。これを超えるとスクロールバーが表示される。 */
    max-height: 400px;
    /* height: auto; を暗黙的に指定し、中身に合わせて高さが変わるようにする */
    height: auto;
}
/* アクション宣言以外の「積み上げ」スタイル */
.action-queue-list.is-stack-style {
    flex-direction: column-reverse;
}
/* 宣言アイテム（箱）のスタイル */
label.action-queue-item {
    background-color: var(--color-background-4);
    border: 1px solid var(--color-border);
    border-radius: 5px;
    padding: 5px;
    min-height: 30px;
    display: flex;
    align-items: center;
    font-weight: bold;
    transition: all 0.2s ease-in-out;
}
/* ② 処理可能な箱（チェックボックスが有効）のスタイル */
label.action-queue-item:not(.is-disabled) {
    cursor: pointer;
    box-shadow:
        0 0 10px      gold,
        0 0 10px      gold;
    border-color:     yellow;
    color:            black;
    background-color: gold;
    z-index: 100;
}
label.action-queue-item:hover:not(.is-disabled) {
    background-color: #ffa;
}
/* ③ 処理完了した箱（チェック済み）のスタイル */
label.action-queue-item.is-checked {
    background:   #dec;
    border-color: #ac5;
}
label.action-queue-item.is-checked span {
    color: #6a4;
    /* text-decoration: line-through; */
}
/* チェックボックス自体のスタイル */
.action-queue-item input[type="checkbox"] {
    margin-right: 5px;
    color: black;
}
/* ==== ログ ================================================================ */
/* .grid-area-log-panel, */
.log {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    height: 100%;
    font-size: 14px;
    padding-bottom: 10px;
    box-sizing: border-box;
}
.log-entries-container {
    flex-grow: 1;
    /* height: 300px; などの固定高さを削除、またはautoに */
    max-height: 500px;
    background-color: var(--color-log-bg);
    border: 1px solid var(--color-border);
    overflow-y: auto;
    padding: 0 8px;
    border-radius: 10px;
    min-height: 200px;
    font-size: 14px;
}
.log-entry {
    padding-bottom: 6px;
    margin-bottom: 6px;
    border-bottom: 1px solid var(--color-border);
    font-size: 14px;
    font-weight: bold;
}
.log-entry:last-child {
    border-bottom: none;
    margin-bottom: 0;
}
/* ================================
   5. 戦闘コントロールボタン
================================ */

/* 戦闘開始ボタンのスタイル */

/* 戦闘中コントロールのコンテナ */
.in-battle-controls {
    display: grid;
    /* ★ 2列から3列に変更 */
    grid-template-columns: 1fr 1fr; 
    gap: 5px;
}
/* ★ リファレンスボタンのスタイルを追加 */
.ref-btn {
    padding: 8px 12px;
    font-size: 1.2rem;
    border: none;
    box-shadow: none;
    background: none;
}
.ref-btn:hover {
    background-color: var(--color-shadow);
}

/* ★★★ 以下のスタイルを末尾に追加 ★★★ */
#resetBattleBtn {
    /* ボタンを2列全体に広げる */
    display: grid;
    justify-content: center;
    justify-items: center;
    grid-template-columns: 1fr;
    margin: 10px;
    padding: 5px 10px;

    font-size: 14px;
    box-sizing: border-box;

}

/* 危険な操作を示すためのボタンスタイル */
.phase-btn-danger {
    background-color: var(--color-accent-red);
    color: white;
    border-color: var(--color-accent-red);
    box-shadow: none;
    border: 2px solid var(--color-accent-red);
}
.phase-btn-danger:hover:not(:disabled) {
    background-color: gold;
    color: var(--color-accent-red);
}

/* ★★★ 表示/非表示の切り替えロジック ★★★ */

/* セットアップ中 (デフォルト) */
.setup-phase #inBattleControls {
    display: none; /* カウントダウン/ターン終了を非表示 */
}
.setup-phase #startBattleBtn {
    display: block; /* 戦闘開始を表示 */
}

/* 戦闘開始後 */
.battle-phase #startBattleBtn {
    display: none; /* 戦闘開始を非表示 */
}
.battle-phase #inBattleControls {
    display: grid; /* カウントダウン/ターン終了を表示 */
}
